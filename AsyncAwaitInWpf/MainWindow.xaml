<Window x:Class="AsyncAwaitInWpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="Async and await" Width="800" Height="600" 
        ResizeMode="NoResize">

  <DockPanel LastChildFill="True" Margin="10">
    <!--Resources-->
    <DockPanel.Resources>
      <Style TargetType="{x:Type Button}">
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="BorderBrush" Value="DarkCyan"/>
        <Setter Property="TextBlock.Foreground" Value="OrangeRed"/>
        <Setter Property="TextBlock.FontWeight" Value="SemiBold"/>
      </Style>
    </DockPanel.Resources>
    <!--BUTTON 1-->
    <Button DockPanel.Dock="Top"
            Content="Main Thread" 
            Click="OnButtonClickHandleByMainThread"/>
    <!--BUTTON 2-->
    <Button DockPanel.Dock="Top"
            Content="Worker Thread" 
            Click="OnButtonClickHandleByWorkerThread"/>
    <!--CHECKBOXS : Configure Await-->
    <StackPanel Orientation="Horizontal" DockPanel.Dock="Top">
      <StackPanel.Resources>
        <Style TargetType="CheckBox">
          <Setter Property="Margin" Value="10,5,0,5"/>
        </Style>
      </StackPanel.Resources>
      <TextBlock Text="Configure Await @" Margin="0,5" Foreground="SteelBlue" FontWeight="Medium" />
      <CheckBox Content="Parent Task" IsChecked="{Binding IsConfigureAwaitCallingTask}"/>
      <CheckBox Content="Delay Task" IsChecked="{Binding IsConfigureAwaitDelayTask}"/>
      <Separator Background="SteelBlue" Margin="10,5" Padding="0,5" Width="2" 
                 Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}"/>
      <CheckBox Content="Parent Task" IsChecked="{Binding IsConfigureAwaitCallingTask}"/>
      <CheckBox Content="Nested Task" IsChecked="{Binding IsConfigureAwaitNesedTask}"/>
      <CheckBox Content="Child Task" IsChecked="{Binding IsConfigureAwaitChildTask}"/>
    </StackPanel>
    <!--BUTTON 3-->
    <Button DockPanel.Dock="Top"
            Content="Task Async-Await"
            Click="OnButtonClickHandleByAsyncAwait"/>
    <!--BUTTON 4-->
    <Button DockPanel.Dock="Top"
            Content="Nested Task Async-Await"
            Click="OnButtonClickHandleByNestedAsyncAwait"/>
    <!--BUTTON 5-->
    <Button DockPanel.Dock="Top"
            Content="Awaited Async method from class library"
            Click="OnButtonClickAwaitLibAsyncMethod"/>
    <!--BUTTON 6-->
    <Button DockPanel.Dock="Top"
            Content="Deadlock"
            Click="OnButtonClickProduceDeadlock"/>
    <!--PROGRESS BAR-->
    <DockPanel DockPanel.Dock="Top" Margin="0,0,0,10">
      <Button DockPanel.Dock="Right" Content="Start" Margin="10,0,0,0" Width="50" Click="OnButtonClickRunProgress"/>
      <ProgressBar x:Name="WorkerProgressBar" DockPanel.Dock="Left" />
    </DockPanel>
    <!--LOGGING-->
    <Border x:Name="LoggingBorder" BorderThickness="1">
      <Grid>
        <TextBlock x:Name="LoggingTextBlock"
                 TextAlignment="Center"
                 TextBlock.FontSize="12"
                 Foreground="Blue"/>
        <TextBlock x:Name="TextBlock_Counter" 
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   FontSize="64" FontWeight="ExtraBold" Opacity="0.2"/>
      </Grid>
    </Border>
  </DockPanel>
</Window>
